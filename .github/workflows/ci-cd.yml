name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build Docker images
        run: docker compose build

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install -r tests/requirements.txt

      - name: Run unit tests
        run: python -m unittest discover tests

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Start containers
        run: docker compose up -d

      - name: Check and restart containers if needed
        run: |
          for service in sensor-producer sensor-consumer mongo-consumer; do
            status=$(docker inspect -f '{{.State.Running}}' $service || echo "false")
            if [ "$status" != "true" ]; then
              echo "$service not running. Restarting..."
              docker compose restart $service
            else
              echo "$service is running."
            fi
          done

      - name: Check MongoDB entries
        run: |
          docker exec mongodb mongosh sensor_data --eval 'db.aggregated_output.find().limit(5).pretty()'
